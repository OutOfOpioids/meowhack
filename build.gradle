buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spongepowered.org/maven' }
        maven { url 'https://maven.minecraftforge.net/' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3.4'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = modversion
group = modgroup
archivesBaseName = modid

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding 'UTF-8'
}

minecraft {
    version = mcforgeversion
    runDir = 'run'
    mappings = mappingsversion
    makeObfSourceJar = false
    clientJvmArgs += '-Dfml.coreMods.load=' + mixinclass
    clientRunArgs += '--mixin ' + mixinconfig
}

mixin {
    defaultObfuscationEnv searge // Types of obf env: searge, notch.
    sourceSets {
        main {
            ext.refMap = 'mixins.meowhack.refmap.json'
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spongepowered.org/maven' }
    maven { url 'https://jitpack.io' }
}

configurations {
    embed
    compile.extendsFrom embed
}

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    embed('club.minnced:java-discord-rpc:2.0.2') {
        exclude module: 'jna'
    }

    embed ('com.moandjiezana.toml:toml4j:0.7.2') {
        exclude module: 'gson'
    }
}

processResources {
    inputs.property 'version', project.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        // Excludes/Removes useless bloat files from the compiled jar.
        exclude 'dummyThing',
                'LICENSE.txt',
                'META-INF/MUMFREY.RSA',
                'META-INF/maven/**',
                'org/**/*.html'
    }
    manifest.attributes(
            'MixinConfigs': mixinconfig,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePlugin': mixinclass,
            'ForceLoadAsMod': 'true'
    )
}

test {
    useJUnitPlatform()
}